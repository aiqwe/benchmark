[
    {
        "idx": 27,
        "inputs": "```\nimport numpy as np\nx = np.zeros(10)\nWhat is the value of x at the end of this program?",
        "targets": [
            "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])"
        ],
        "multiple_choice_targets": [],
        "multiple_choice_scores": []
    },
    {
        "idx": 32,
        "inputs": "```\ndef r(n):\n\tif n == 1:\n\t\treturn 1\n\telse:\n\t\treturn n + r(n-1)\nz = r(10)\ny = r(-10)\n```\nWhat is the value of z at immediately after line 7 has executed?",
        "targets": [
            "55"
        ],
        "multiple_choice_targets": [],
        "multiple_choice_scores": []
    },
    {
        "idx": 26,
        "inputs": "```\nimport numpy as np\nx = numpy.zeros(10)\n```\nWhat type of exception does this program produce?",
        "targets": [
            "NameError: name 'numpy' is not defined"
        ],
        "multiple_choice_targets": [],
        "multiple_choice_scores": []
    },
    {
        "idx": 16,
        "inputs": "```\nsum = 0\nfor i in range(100, 0, -2):\n\tsum += i\n```\nWhat is the value of sum at the end of this program?",
        "targets": [
            "2550"
        ],
        "multiple_choice_targets": [],
        "multiple_choice_scores": []
    },
    {
        "idx": 12,
        "inputs": "```\ndef sq(x):\n\treturn x*x\ny = sq(5)\nx = sq(3)\n```\nWhat is the value of x at the end of this program?",
        "targets": [
            "9"
        ],
        "multiple_choice_targets": [],
        "multiple_choice_scores": []
    },
    {
        "idx": 0,
        "inputs": "```\nfor i in range(10):\n\tpass\n```\nWhat is the value of i the third time line 2 is executed?",
        "targets": [
            "2"
        ],
        "multiple_choice_targets": [],
        "multiple_choice_scores": []
    },
    {
        "idx": 31,
        "inputs": "```\ndef f1():\n\treturn str(x) + 'hello'\ndef f2():\n\treturn f1(2*x)\nx = f2(524)\n```\nWhat is the value of x at the end of this program?",
        "targets": [
            "'1048hello'"
        ],
        "multiple_choice_targets": [],
        "multiple_choice_scores": []
    },
    {
        "idx": 33,
        "inputs": "```\ndef r(n):\n\tif n == 1:\n\t\treturn 1\n\telse:\n\t\treturn n + r(n-1)\nz = r(10)\ny = r(-10)\n```\nWhat type of exception does this program produce?",
        "targets": [
            "RecursionError: maximum recursion depth exceeded in comparison"
        ],
        "multiple_choice_targets": [],
        "multiple_choice_scores": []
    },
    {
        "idx": 14,
        "inputs": "```\ndef test(x):\n\tfor i in range(2, x**(0.5)):\n\t\tif x % int(i) == 0:\n\t\t\treturn False\n\treturn True\n```\nWhat is test(101)?",
        "targets": [
            "True"
        ],
        "multiple_choice_targets": [],
        "multiple_choice_scores": []
    },
    {
        "idx": 3,
        "inputs": "```\nx = 1\nif x > 3:\n\ty = 'hello'\n```\nWhat is the value of y at line 4?",
        "targets": [
            "None"
        ],
        "multiple_choice_targets": [],
        "multiple_choice_scores": []
    },
    {
        "idx": 26,
        "inputs": "```\nimport numpy as np\nx = numpy.zeros(10)\n```\nWhat type of exception does this program produce?",
        "targets": [
            "NameError: name 'numpy' is not defined"
        ],
        "multiple_choice_targets": [],
        "multiple_choice_scores": []
    },
    {
        "idx": 33,
        "inputs": "```\ndef r(n):\n\tif n == 1:\n\t\treturn 1\n\telse:\n\t\treturn n + r(n-1)\nz = r(10)\ny = r(-10)\n```\nWhat type of exception does this program produce?",
        "targets": [
            "RecursionError: maximum recursion depth exceeded in comparison"
        ],
        "multiple_choice_targets": [],
        "multiple_choice_scores": []
    },
    {
        "idx": 22,
        "inputs": "```\nclass MyClass():\n\tdef __init__(self, param):\n\t\tself.param = param\nx = MyClass(5)\ny = MyClass(x.param)\n```\nWhat is the value of y.param at the end of this program?",
        "targets": [
            "5"
        ],
        "multiple_choice_targets": [],
        "multiple_choice_scores": []
    },
    {
        "idx": 32,
        "inputs": "```\ndef r(n):\n\tif n == 1:\n\t\treturn 1\n\telse:\n\t\treturn n + r(n-1)\nz = r(10)\ny = r(-10)\n```\nWhat is the value of z at immediately after line 7 has executed?",
        "targets": [
            "55"
        ],
        "multiple_choice_targets": [],
        "multiple_choice_scores": []
    },
    {
        "idx": 14,
        "inputs": "```\ndef test(x):\n\tfor i in range(2, x**(0.5)):\n\t\tif x % int(i) == 0:\n\t\t\treturn False\n\treturn True\n```\nWhat is test(101)?",
        "targets": [
            "True"
        ],
        "multiple_choice_targets": [],
        "multiple_choice_scores": []
    },
    {
        "idx": 27,
        "inputs": "```\nimport numpy as np\nx = np.zeros(10)\nWhat is the value of x at the end of this program?",
        "targets": [
            "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])"
        ],
        "multiple_choice_targets": [],
        "multiple_choice_scores": []
    },
    {
        "idx": 8,
        "inputs": "```\nx = [1, 2, 3]\nprint(x[4])\n```\nWhat error does this program produce?",
        "targets": [
            "IndexError: list index out of range"
        ],
        "multiple_choice_targets": [],
        "multiple_choice_scores": []
    },
    {
        "idx": 28,
        "inputs": "```\nwhile True\n\tprint('hello world')\n```\nWhat type of exception does this program produce?",
        "targets": [
            "SyntaxError: invalid syntax"
        ],
        "multiple_choice_targets": [],
        "multiple_choice_scores": []
    },
    {
        "idx": 33,
        "inputs": "```\ndef r(n):\n\tif n == 1:\n\t\treturn 1\n\telse:\n\t\treturn n + r(n-1)\nz = r(10)\ny = r(-10)\n```\nWhat type of exception does this program produce?",
        "targets": [
            "RecursionError: maximum recursion depth exceeded in comparison"
        ],
        "multiple_choice_targets": [],
        "multiple_choice_scores": []
    },
    {
        "idx": 4,
        "inputs": "```\nx = 5\ny = 2\nwhile(x < 7):\n\ty += 2\n```\nWhat is the value of y at the end of this program?",
        "targets": [
            "6"
        ],
        "multiple_choice_targets": [],
        "multiple_choice_scores": []
    }
]