[
    {
        "idx": 24,
        "inputs": "Python code:\na, b, c, d = True, False, False, True\nif not a or not c:\n    print('no')\nelse: \n    print('yes')\n\n  choice: checks if c is true or not\n  choice: combines the strings a,b,c and d\n  choice: checks if a is true or not\n  choice: checks if one of a or c is False, then prints 'no' since c is False\n\nEnglish language description:",
        "targets": [
            "checks if one of a or c is False, then prints 'no' since c is False"
        ],
        "multiple_choice_targets": [
            "combines the strings a,b,c and d",
            "checks if a is true or not",
            "checks if one of a or c is False, then prints 'no' since c is False",
            "checks if c is true or not"
        ],
        "multiple_choice_scores": [
            0,
            0,
            1,
            0
        ]
    },
    {
        "idx": 13,
        "inputs": "Python code:\nhelp(float)\n\n  choice: prints the string 'float'\n  choice: type casts a string\n  choice: prints 'help'\n  choice: returns documentation for float\n\nEnglish language description:",
        "targets": [
            "returns documentation for float"
        ],
        "multiple_choice_targets": [
            "type casts a string",
            "returns documentation for float",
            "prints 'help'",
            "prints the string 'float'"
        ],
        "multiple_choice_scores": [
            0,
            1,
            0,
            0
        ]
    },
    {
        "idx": 57,
        "inputs": "Python code:\nimport os\n\npath = '/home/tests/bin'\nfiles = os.listdir(path)\nfor file in files:\n    print(file)\n\n  choice: prints the list of files in a directory\n  choice: returns the path of file\n  choice: opens a file\n  choice: returns current directory\n\nEnglish language description:",
        "targets": [
            "prints the list of files in a directory"
        ],
        "multiple_choice_targets": [
            "returns current directory",
            "returns the path of file",
            "prints the list of files in a directory",
            "opens a file"
        ],
        "multiple_choice_scores": [
            0,
            0,
            1,
            0
        ]
    },
    {
        "idx": 28,
        "inputs": "Python code:\nx = 5\ny = 10\nx = x ^ y\ny = x ^ y\nx = x ^ y\n\n  choice: prints x times y\n  choice: y is equal to y raised to power x\n  choice: swaps x and y\n  choice: assigns x and y value 50\n  choice: x is equal to x raised to power y\n\nEnglish language description:",
        "targets": [
            "swaps x and y"
        ],
        "multiple_choice_targets": [
            "swaps x and y",
            "x is equal to x raised to power y",
            "y is equal to y raised to power x",
            "prints x times y",
            "assigns x and y value 50"
        ],
        "multiple_choice_scores": [
            1,
            0,
            0,
            0,
            0
        ]
    },
    {
        "idx": 28,
        "inputs": "Python code:\nx = 5\ny = 10\nx = x ^ y\ny = x ^ y\nx = x ^ y\n\n  choice: prints x times y\n  choice: y is equal to y raised to power x\n  choice: swaps x and y\n  choice: assigns x and y value 50\n  choice: x is equal to x raised to power y\n\nEnglish language description:",
        "targets": [
            "swaps x and y"
        ],
        "multiple_choice_targets": [
            "swaps x and y",
            "x is equal to x raised to power y",
            "y is equal to y raised to power x",
            "prints x times y",
            "assigns x and y value 50"
        ],
        "multiple_choice_scores": [
            1,
            0,
            0,
            0,
            0
        ]
    },
    {
        "idx": 58,
        "inputs": "Python code:\nsum_of_numbers = 0\nfor n in range(0, 10):\n    if n % 8 == 0 or n % 5 == 0:\n        sum_of_numbers += n\nprint(sum_of_numbers)\n\n  choice: returns if a number is multiple of 8\n  choice: returns the sum of two numbers\n  choice: prints the sum of all non-negative integers less than 10 which are either multiples of 8 or 5\n  choice: returns numbers which are multiples of 8 or 5\n\nEnglish language description:",
        "targets": [
            "prints the sum of all non-negative integers less than 10 which are either multiples of 8 or 5"
        ],
        "multiple_choice_targets": [
            "returns if a number is multiple of 8",
            "returns the sum of two numbers",
            "prints the sum of all non-negative integers less than 10 which are either multiples of 8 or 5",
            "returns numbers which are multiples of 8 or 5"
        ],
        "multiple_choice_scores": [
            0,
            0,
            1,
            0
        ]
    },
    {
        "idx": 56,
        "inputs": "Python code:\nfruits = ['Apple','Orange','Guava','Banana']\nfruits.insert(1, 'Grape')\n\n  choice: inserts 1 in list fruits\n  choice: returns a list of fruits\n  choice: creates a list of apples\n  choice: inserts Grape in list fruits in second position\n\nEnglish language description:",
        "targets": [
            "inserts Grape in list fruits in second position"
        ],
        "multiple_choice_targets": [
            "inserts 1 in list fruits",
            "inserts Grape in list fruits in second position",
            "creates a list of apples",
            "returns a list of fruits"
        ],
        "multiple_choice_scores": [
            0,
            1,
            0,
            0
        ]
    },
    {
        "idx": 2,
        "inputs": "Python code:\nprint([x for x in range(1,531)])\n\n  choice: prints 'hello world' to the terminal\n  choice: prints values from 1 to 10\n  choice: computes first 10 prime numbers\n  choice: prints a list of first 530 natural numbers\n\nEnglish language description:",
        "targets": [
            "prints a list of first 530 natural numbers"
        ],
        "multiple_choice_targets": [
            "prints a list of first 530 natural numbers",
            "computes first 10 prime numbers",
            "prints values from 1 to 10",
            "prints 'hello world' to the terminal"
        ],
        "multiple_choice_scores": [
            1,
            0,
            0,
            0
        ]
    },
    {
        "idx": 28,
        "inputs": "Python code:\nx = 5\ny = 10\nx = x ^ y\ny = x ^ y\nx = x ^ y\n\n  choice: prints x times y\n  choice: y is equal to y raised to power x\n  choice: swaps x and y\n  choice: assigns x and y value 50\n  choice: x is equal to x raised to power y\n\nEnglish language description:",
        "targets": [
            "swaps x and y"
        ],
        "multiple_choice_targets": [
            "swaps x and y",
            "x is equal to x raised to power y",
            "y is equal to y raised to power x",
            "prints x times y",
            "assigns x and y value 50"
        ],
        "multiple_choice_scores": [
            1,
            0,
            0,
            0,
            0
        ]
    },
    {
        "idx": 51,
        "inputs": "Python code:\ndef greet(name):\n    print ('Hello', name)\ngreet('Linda')\n\n  choice: prints 'Hello Linda'\n  choice: prints 'python 3.7'\n  choice: greets Jack\n  choice: prints 'Hello World!'\n\nEnglish language description:",
        "targets": [
            "prints 'Hello Linda'"
        ],
        "multiple_choice_targets": [
            "prints 'Hello Linda'",
            "prints 'Hello World!'",
            "prints 'python 3.7'",
            "greets Jack"
        ],
        "multiple_choice_scores": [
            1,
            0,
            0,
            0
        ]
    },
    {
        "idx": 17,
        "inputs": "Python code:\na = 'xyz'\nb = 'xyz'\nc = a==b\nprint(c)\n\n  choice: prints string 'b'\n  choice: swaps strings and b\n  choice: checks if a is equal to b and prints True\n  choice: swaps a with c\n\nEnglish language description:",
        "targets": [
            "checks if a is equal to b and prints True"
        ],
        "multiple_choice_targets": [
            "prints string 'b'",
            "checks if a is equal to b and prints True",
            "swaps strings and b",
            "swaps a with c"
        ],
        "multiple_choice_scores": [
            0,
            1,
            0,
            0
        ]
    },
    {
        "idx": 16,
        "inputs": "Python code:\na = 'x'\nb = 'xyz'\nc = a==b\nprint(c)\n\n  choice: prints string 'b'\n  choice: swaps strings a and b\n  choice: checks if a is equal to b and prints False\n  choice: swaps a with c\n\nEnglish language description:",
        "targets": [
            "checks if a is equal to b and prints False"
        ],
        "multiple_choice_targets": [
            "prints string 'b'",
            "checks if a is equal to b and prints False",
            "swaps strings a and b",
            "swaps a with c"
        ],
        "multiple_choice_scores": [
            0,
            1,
            0,
            0
        ]
    },
    {
        "idx": 29,
        "inputs": "Python code:\nimport random\nprint(random.randint(10))\n\n  choice: prints a random value between 0 and 9\n  choice: prints values from 0 to 9\n  choice: prints '10'\n  choice: prints string 'random'\n\nEnglish language description:",
        "targets": [
            "prints a random value between 0 and 9"
        ],
        "multiple_choice_targets": [
            "prints string 'random'",
            "prints a random value between 0 and 9",
            "prints values from 0 to 9",
            "prints '10'"
        ],
        "multiple_choice_scores": [
            0,
            1,
            0,
            0
        ]
    },
    {
        "idx": 47,
        "inputs": "Python code:\ntest_str = 'baTTab'\n\n# make test_string caseless\ntest_str = test_str.casefold()\n\n# reverse the string\nrev_str = reversed(test_str)\n\nif list(test_str) == list(rev_str):\n    print('palindrome')\nelse:\n    print('not palindrome')\n\n  choice: checks if a string is palindrome\n  choice: slices the string\n  choice: checks if a string has vowels\n  choice: prints string 'baTTab' 10 times\n\nEnglish language description:",
        "targets": [
            "checks if a string is palindrome"
        ],
        "multiple_choice_targets": [
            "checks if a string is palindrome",
            "slices the string",
            "checks if a string has vowels",
            "prints string 'baTTab' 10 times"
        ],
        "multiple_choice_scores": [
            1,
            0,
            0,
            0
        ]
    },
    {
        "idx": 37,
        "inputs": "Python code:\nnum = 10\nfactorial = 1\n\nif num < 0:\n    print('Sorry, factorial does not exist for negative numbers')\nelif num == 0:\n    print('The factorial of 0 is 1')\nelse:\n    for i in range(1,num + 1):\n        factorial = factorial*i\n    print('The factorial of',num,'is',factorial)\n\n  choice: checks if a number is positive or negative\n  choice: prints the factorial of number 20\n  choice: checks if 20 is negative number\n  choice: prints 'The factorial of 10 is 3628800'\n\nEnglish language description:",
        "targets": [
            "prints 'The factorial of 10 is 3628800'"
        ],
        "multiple_choice_targets": [
            "prints 'The factorial of 10 is 3628800'",
            "prints the factorial of number 20",
            "checks if a number is positive or negative",
            "checks if 20 is negative number"
        ],
        "multiple_choice_scores": [
            1,
            0,
            0,
            0
        ]
    },
    {
        "idx": 46,
        "inputs": "Python code:\ndef matrix_multiplication(x,y):\n    result = [[0,0,0,0],\n         [0,0,0,0],\n         [0,0,0,0]]\n    for i in range(len(x)):\n        for j in range(len(y[0])):\n            for k in range(len(y)):\n        \n                result[i][j] += x[i][k] * y[k][j]\n    return result\n\n  choice: computes subtracion of three numbers\n  choice: returns multiplication of two matrices\n  choice: appends two lists\n  choice: returns addition of two lists\n\nEnglish language description:",
        "targets": [
            "returns multiplication of two matrices"
        ],
        "multiple_choice_targets": [
            "returns multiplication of two matrices",
            "returns addition of two lists",
            "computes subtracion of three numbers",
            "appends two lists"
        ],
        "multiple_choice_scores": [
            1,
            0,
            0,
            0
        ]
    },
    {
        "idx": 31,
        "inputs": "Python code:\nif num > 5:\n    print('positive')\nelse:\n    print('negative')\n\n  choice: checks if a number is greater than zero\n  choice: if number is greater than 5 prints 'positive' otherwise prints 'negative'\n  choice: assigns 'positive' or 'negative' to variable num\n  choice: checks if a number is positive or negative\n\nEnglish language description:",
        "targets": [
            "if number is greater than 5 prints 'positive' otherwise prints 'negative'"
        ],
        "multiple_choice_targets": [
            "checks if a number is greater than zero",
            "if number is greater than 5 prints 'positive' otherwise prints 'negative'",
            "checks if a number is positive or negative",
            "assigns 'positive' or 'negative' to variable num"
        ],
        "multiple_choice_scores": [
            0,
            1,
            0,
            0
        ]
    },
    {
        "idx": 1,
        "inputs": "Python code:\nfor i in range(1,101):\n    print(i)\n\n  choice: prints 'hello world' to the terminal\n  choice: prints values from 1 to 10\n  choice: computes first 10 prime numbers\n  choice: prints first 100 natural numbers\n\nEnglish language description:",
        "targets": [
            "prints first 100 natural numbers"
        ],
        "multiple_choice_targets": [
            "prints first 100 natural numbers",
            "computes first 10 prime numbers",
            "prints values from 1 to 10",
            "prints 'hello world' to the terminal"
        ],
        "multiple_choice_scores": [
            1,
            0,
            0,
            0
        ]
    },
    {
        "idx": 25,
        "inputs": "Python code:\ns, t, u, v = True, True, False, False\nif not s or not v:\n    print('no')\nelse:\n    print('yes')\n\n  choice: checks if c is true or not\n  choice: combines the strings a,b,c and d\n  choice: checks if a is true or not\n  choice: checks if the condition not s or not v is true and prints no if true else prints yes\n\nEnglish language description:",
        "targets": [
            "checks if the condition not s or not v is true and prints no if true else prints yes"
        ],
        "multiple_choice_targets": [
            "combines the strings a,b,c and d",
            "checks if the condition not s or not v is true and prints no if true else prints yes",
            "checks if a is true or not",
            "checks if c is true or not"
        ],
        "multiple_choice_scores": [
            0,
            1,
            0,
            0
        ]
    },
    {
        "idx": 50,
        "inputs": "Python code:\ndef greet(name):\n    print ('Hello', name)\n\ngreet('Jack')\n\n  choice: prints 'Hello Jack'\n  choice: prints 'python 3.7'\n  choice: greets Jack\n  choice: prints 'Hello World!'\n\nEnglish language description:",
        "targets": [
            "prints 'Hello Jack'"
        ],
        "multiple_choice_targets": [
            "prints 'Hello Jack'",
            "prints 'Hello World!'",
            "prints 'python 3.7'",
            "greets Jack"
        ],
        "multiple_choice_scores": [
            1,
            0,
            0,
            0
        ]
    }
]