[
    {
        "idx": 40,
        "inputs": "Python code:\nimport re\n\ndef test_regular_expression(test_str):\n    if re.match(r'^\\d{4}-\\d{3}$', test_str):\n        return True\n    else:\n        return False\n\n  choice: returns true if a number is of type yyyy-yyy else false\n  choice: returns value in 'test_str'\n  choice: returns string 'r'^\\d{4}-\\d{3}$''\n  choice: returns true if a string has character 'd' on it\n\nEnglish language description:",
        "targets": [
            "since both j and b are true prints pass"
        ],
        "multiple_choice_targets": [
            "prints 'The largest number is 14'",
            "finds the smallest number among three numbers",
            "checks if a number is prime or not",
            "prints number between 12 and 14"
        ],
        "multiple_choice_scores": [
            0,
            1,
            0,
            0
        ]
    },
    {
        "idx": 4,
        "inputs": "Python code:\ntry:\n    n = int(input())\n    m = int(input())\n    integer_sum = int(n) + int(m)\n    print(integer_sum)\nexcept:\n    print('error')\n\n  choice: prints number between 5 and 6\n  choice: try input and except error\n  choice: inputs the string 'try'\n  choice: prints sum of two input numbers only if they are integers otherwise raises error\n\nEnglish language description:",
        "targets": [
            "prints the list of files in a directory"
        ],
        "multiple_choice_targets": [
            "if input is greater than 5 prints 'positive','zero' if equal to zero and 'negative' otherwise",
            "checks if a number is positive negative or zero",
            "checks if a number is greater than zero",
            "checks if a number is interger"
        ],
        "multiple_choice_scores": [
            1,
            0,
            0,
            0
        ]
    },
    {
        "idx": 5,
        "inputs": "Python code:\nnum = int(input('Enter a number: '))\nif num > 5:\n    print('positive')\nelif num == 0:\n    print('zero')\nelse:\n    print('negative')\n\n  choice: checks if a number is interger\n  choice: if input is greater than 5 prints 'positive','zero' if equal to zero and 'negative' otherwise\n  choice: checks if a number is greater than zero\n  choice: checks if a number is positive negative or zero\n\nEnglish language description:",
        "targets": [
            "creates an object my_account of class Bank"
        ],
        "multiple_choice_targets": [
            "prints the sum of first 10 natural numbers",
            "prints the numbers from 1 to 10",
            "prints number from 10 to 0 in ascending order",
            "prints the factorial of numbers"
        ],
        "multiple_choice_scores": [
            1,
            0,
            0,
            0
        ]
    },
    {
        "idx": 29,
        "inputs": "Python code:\nhelp(float)\n\n  choice: prints the string 'float'\n  choice: type casts a string\n  choice: prints 'help'\n  choice: returns documentation for float\n\nEnglish language description:",
        "targets": [
            "since both j and b are true prints pass"
        ],
        "multiple_choice_targets": [
            "returns a perfect number",
            "prints a perfect number",
            "computes the prime numbers",
            "returns if a number is perfect number or not"
        ],
        "multiple_choice_scores": [
            0,
            0,
            0,
            1
        ]
    },
    {
        "idx": 22,
        "inputs": "Python code:\ndef natural_sum_recursive(n):\n    if n <= 1:\n        return n\n    else:\n        return n + natural_sum_recursive(n-1)\n\nnum = 16\nprint(natural_sum_recursive(num))\n\n  choice: prints the first 16 natural numbers\n  choice: returns natural_sum_recursive\n  choice: prints string natural\n  choice: prints the sum of first 16 natural numbers\n\nEnglish language description:",
        "targets": [
            "prints the list of files in a directory"
        ],
        "multiple_choice_targets": [
            "prints pass since a is True",
            "prints fail since a is fail",
            "prints true",
            "checks if a equals to b"
        ],
        "multiple_choice_scores": [
            1,
            0,
            0,
            0
        ]
    },
    {
        "idx": 41,
        "inputs": "Python code:\na = 'x'\nb = 'xyz'\nc = a==b\nprint(c)\n\n  choice: prints string 'b'\n  choice: swaps strings a and b\n  choice: checks if a is equal to b and prints False\n  choice: swaps a with c\n\nEnglish language description:",
        "targets": [
            "if number is equals to 5 prints 'negative' otherwise prints 'positive'"
        ],
        "multiple_choice_targets": [
            "type casts a string",
            "returns documentation for float",
            "prints 'help'",
            "prints the string 'float'"
        ],
        "multiple_choice_scores": [
            0,
            0,
            0,
            1
        ]
    },
    {
        "idx": 34,
        "inputs": "Python code:\ndef number_vowels(test_str):\n\n    # string of vowels\n    vowels = 'aeiou'\n    test_str = ip_str.casefold()\n    count = {}.fromkeys(vowels,0)\n\n    # count the vowels\n    for char in test_str:\n        if char in count:\n            count[char] += 1\n    return count\n\n  choice: returns a dictionary of the number of occurences of each vowel in a string\n  choice: returns the sum of all the numbers\n  choice: counts the number of characters in a string\n  choice: returns complex numbers\n\nEnglish language description:",
        "targets": [
            "returns if a number is perfect number or not"
        ],
        "multiple_choice_targets": [
            "returns true if a string has character 'd' on it",
            "returns true if a number is of type xxx-xxxx else false",
            "returns string 'r'^\\d{3}-\\d{4}$''",
            "returns value in 'test_str'"
        ],
        "multiple_choice_scores": [
            1,
            0,
            0,
            0
        ]
    },
    {
        "idx": 17,
        "inputs": "Python code:\nhelp(float)\n\n  choice: prints the string 'float'\n  choice: type casts a string\n  choice: prints 'help'\n  choice: returns documentation for float\n\nEnglish language description:",
        "targets": [
            "prints a list of remainders of numbers in list numbers_list when divided by 2"
        ],
        "multiple_choice_targets": [
            "if input is greater than 5 prints 'positive','zero' if equal to zero and 'negative' otherwise",
            "checks if a number is positive negative or zero",
            "checks if a number is greater than zero",
            "checks if a number is interger"
        ],
        "multiple_choice_scores": [
            1,
            0,
            0,
            0
        ]
    },
    {
        "idx": 20,
        "inputs": "Python code:\nnumbers_list = [2, 6, 8, 10, 11, 4, 12, 7, 13, 17, 0, 3, 21]\nfiltered_list = list(filter(lambda num: (num > 7), numbers_list))\nprint(filtered_list)\n\n  choice: prints lambda\n  choice: returns a filtered list\n  choice: prints a list of numbers greater than 7 from numbers_list\n  choice: prints numbers from 2 to 6\n\nEnglish language description:",
        "targets": [
            "if input is greater than 5 prints 'positive','zero' if equal to zero and 'negative' otherwise"
        ],
        "multiple_choice_targets": [
            "prints number between 5 and 6",
            "prints sum of two input numbers only if they are integers otherwise raises error",
            "try input and except error",
            "inputs the string 'try'"
        ],
        "multiple_choice_scores": [
            0,
            1,
            0,
            0
        ]
    },
    {
        "idx": 25,
        "inputs": "Python code:\na = True\nif a is True:\n    print ('pass')\nelse:\n    print('fail')\n\n  choice: prints fail since a is fail\n  choice: prints true\n  choice: checks if a equals to b\n  choice: prints pass since a is True\n\nEnglish language description:",
        "targets": [
            "checks if a is equal to b and prints False"
        ],
        "multiple_choice_targets": [
            "returns natural_sum_recursive",
            "prints string natural",
            "prints the sum of first 16 natural numbers",
            "prints the first 16 natural numbers"
        ],
        "multiple_choice_scores": [
            1,
            0,
            0,
            0
        ]
    },
    {
        "idx": 20,
        "inputs": "Python code:\ndef natural_sum_recursive(n):\n    if n <= 1:\n        return n\n    else:\n        return n + natural_sum_recursive(n-1)\n\nnum = 16\nprint(natural_sum_recursive(num))\n\n  choice: prints the first 16 natural numbers\n  choice: returns natural_sum_recursive\n  choice: prints string natural\n  choice: prints the sum of first 16 natural numbers\n\nEnglish language description:",
        "targets": [
            "returns multiplication of two matrices"
        ],
        "multiple_choice_targets": [
            "swaps x and y",
            "x is equal to x raised to power y",
            "y is equal to y raised to power x",
            "prints x times y",
            "assigns x and y value 50"
        ],
        "multiple_choice_scores": [
            0,
            0,
            1,
            0
        ]
    },
    {
        "idx": 41,
        "inputs": "Python code:\nimport re\n\ndef test_regular_expression(test_str):\n    if re.match(r'^\\d{3}-\\d{4}$', test_str):\n        return True\n    else:\n        return False\n\n  choice: returns true if a number is of type xxx-xxxx else false\n  choice: returns value in 'test_str'\n  choice: returns string 'r'^\\d{3}-\\d{4}$''\n  choice: returns true if a string has character 'd' on it\n\nEnglish language description:",
        "targets": [
            "reads a csv file as a pandas dataframe"
        ],
        "multiple_choice_targets": [
            "initializes list t with square of numbers from 0 to 6",
            "initializes list t with square of numbers from 0 to 2",
            "computes multiples of 2",
            "populates list t with 10 numbers"
        ],
        "multiple_choice_scores": [
            0,
            1,
            0,
            0
        ]
    },
    {
        "idx": 15,
        "inputs": "Python code:\nnumbers_list = [2, 6, 8, 10, 11, 4, 12, 7, 13, 17, 0, 3, 21]\nremainder_list = list(map(lambda num: num % 2, numbers_list))\nprint(remainder_list)\n\n  choice: prints factors of 2\n  choice: returns multiples of 3\n  choice: prints a list of remainders of numbers in list numbers_list when divided by 2\n  choice: returns a list of odd numbers\n\nEnglish language description:",
        "targets": [
            "prints 'palindrome' since aaabbbaaa is a palindrome"
        ],
        "multiple_choice_targets": [
            "initializes list t with square of numbers from 0 to 6",
            "initializes list t with square of numbers from 0 to 2",
            "computes multiples of 2",
            "populates list t with 10 numbers"
        ],
        "multiple_choice_scores": [
            1,
            0,
            0,
            0
        ]
    },
    {
        "idx": 27,
        "inputs": "Python code:\nnatural_sum = 0\ni = 100\nwhile(i > 0):\n    natural_sum += i\n    i -= 1\nprint('The sum is', natural_sum)\n\n  choice: prints the factorial of numbers\n  choice: prints the sum of first 100 natural numbers\n  choice: prints number from 10 to 0 in ascending order\n  choice: prints the numbers from 1 to 10\n\nEnglish language description:",
        "targets": [
            "checks if one of a or c is False, then prints 'no' since c is False"
        ],
        "multiple_choice_targets": [
            "prints fail",
            "combines a and b",
            "prints value of both a and b",
            "since both j and b are true prints pass"
        ],
        "multiple_choice_scores": [
            1,
            0,
            0,
            0
        ]
    },
    {
        "idx": 8,
        "inputs": "Python code:\nno_terms = 5\nn1, n2 = 0, 1\ncount = 0\nwhile count < no_terms:\n    print(n1)\n    nth = n1 + n2\n    n1 = n2\n    n2 = nth\n    count += 1\n\n  choice: prints first 5 prime numbers\n  choice: prints sum of two numbers\n  choice: prints first 5 fibonacci numbers\n  choice: prints sum of first five numbers\n\nEnglish language description:",
        "targets": [
            "swaps x and y"
        ],
        "multiple_choice_targets": [
            "prints if a and c are equal and prints 'yes'",
            "checks if s or t are False, prints 'no'",
            "prints 'yes'",
            "assings strings 'True' to a"
        ],
        "multiple_choice_scores": [
            0,
            0,
            1,
            0
        ]
    },
    {
        "idx": 7,
        "inputs": "Python code:\nimport pandas as pd\ndata = pd.read_csv('file_name.csv')\n\n  choice: creates a list of numbers\n  choice: returns a csv file\n  choice: prints 'pandas'\n  choice: assigns value\n  choice: reads a csv file as a pandas dataframe\n\nEnglish language description:",
        "targets": [
            "returns documentation for float"
        ],
        "multiple_choice_targets": [
            "returns a perfect number",
            "prints a perfect number",
            "computes the prime numbers",
            "returns if a number is perfect number or not"
        ],
        "multiple_choice_scores": [
            1,
            0,
            0,
            0
        ]
    },
    {
        "idx": 27,
        "inputs": "Python code:\nif num == 5:\n    print('negative')\nelse:\n    print('positive')\n\n  choice: checks if a number is greater than zero\n  choice: if number is equals to 5 prints 'negative' otherwise prints 'positive'\n  choice: assigns 'positive' or 'negative' to variable num\n  choice: checks if a number is positive or negative\n\nEnglish language description:",
        "targets": [
            "checks if a is equal to b and prints False"
        ],
        "multiple_choice_targets": [
            "prints the sum of first 10 natural numbers",
            "prints the numbers from 1 to 10",
            "prints number from 10 to 0 in ascending order",
            "prints the factorial of numbers"
        ],
        "multiple_choice_scores": [
            1,
            0,
            0,
            0
        ]
    },
    {
        "idx": 38,
        "inputs": "Python code:\nimport re\n\ndef test_regular_expression(test_str):\n    if re.match(r'^\\d{3}-\\d{4}$', test_str):\n        return True\n    else:\n        return False\n\n  choice: returns true if a number is of type xxx-xxxx else false\n  choice: returns value in 'test_str'\n  choice: returns string 'r'^\\d{3}-\\d{4}$''\n  choice: returns true if a string has character 'd' on it\n\nEnglish language description:",
        "targets": [
            "checks the conditions and assigns results to z"
        ],
        "multiple_choice_targets": [
            "initializes list t with square of numbers from 0 to 6",
            "initializes list t with square of numbers from 0 to 2",
            "computes multiples of 2",
            "populates list t with 10 numbers"
        ],
        "multiple_choice_scores": [
            0,
            1,
            0,
            0
        ]
    },
    {
        "idx": 0,
        "inputs": "Python code:\nprint([x for x in range(1,531)])\n\n  choice: prints 'hello world' to the terminal\n  choice: prints values from 1 to 10\n  choice: computes first 10 prime numbers\n  choice: prints a list of first 530 natural numbers\n\nEnglish language description:",
        "targets": [
            "prints the sum of all non-negative integers less than 10 which are either multiples of 8 or 5"
        ],
        "multiple_choice_targets": [
            "prints a list of first 530 natural numbers",
            "computes first 10 prime numbers",
            "prints values from 1 to 10",
            "prints 'hello world' to the terminal"
        ],
        "multiple_choice_scores": [
            1,
            0,
            0,
            0
        ]
    },
    {
        "idx": 17,
        "inputs": "Python code:\ndef matrix_multiplication(x,y):\n    result = [[0,0,0,0],\n         [0,0,0,0],\n         [0,0,0,0]]\n    for i in range(len(x)):\n        for j in range(len(y[0])):\n            for k in range(len(y)):\n        \n                result[i][j] += x[i][k] * y[k][j]\n    return result\n\n  choice: computes subtracion of three numbers\n  choice: returns multiplication of two matrices\n  choice: appends two lists\n  choice: returns addition of two lists\n\nEnglish language description:",
        "targets": [
            "prints the set of elements in list x but not list y"
        ],
        "multiple_choice_targets": [
            "returns if a number is multiple of 8",
            "returns the sum of two numbers",
            "prints the sum of all non-negative integers less than 10 which are either multiples of 8 or 5",
            "returns numbers which are multiples of 8 or 5"
        ],
        "multiple_choice_scores": [
            1,
            0,
            0,
            0
        ]
    }
]