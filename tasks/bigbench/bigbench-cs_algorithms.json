[
    {
        "idx": 580,
        "inputs": "Determine whether the given sequence of parentheses is properly matched.\n\nSequence: { } [ ] [ [ ] [ { } ] ] ( ) ( { } { } )\nValid/Invalid?",
        "targets": [
            "Invalid"
        ],
        "multiple_choice_targets": [
            "Valid",
            "Invalid"
        ],
        "multiple_choice_scores": [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
        ]
    },
    {
        "idx": 218,
        "inputs": "Determine whether the given sequence of parentheses is properly matched.\n\nSequence: ( [ ] [ [ { } ] ( ) ] ( ] { } ) [ [ ] (\nValid/Invalid?",
        "targets": [
            "Valid"
        ],
        "multiple_choice_targets": [
            "Valid",
            "Invalid"
        ],
        "multiple_choice_scores": [
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ]
    },
    {
        "idx": 222,
        "inputs": "Determine whether the given sequence of parentheses is properly matched.\n\nSequence: { } { { [ ( ) ] } }\nValid/Invalid?",
        "targets": [
            "Invalid"
        ],
        "multiple_choice_targets": [
            "Valid",
            "Invalid"
        ],
        "multiple_choice_scores": [
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ]
    },
    {
        "idx": 204,
        "inputs": "Determine whether the given sequence of parentheses is properly matched.\n\nSequence: { } ( ) ( ) [ [ ( ) ] [ ] [ [ ] ] ( ) ]\nValid/Invalid?",
        "targets": [
            "Invalid"
        ],
        "multiple_choice_targets": [
            "Valid",
            "Invalid"
        ],
        "multiple_choice_scores": [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
        ]
    },
    {
        "idx": 122,
        "inputs": "Determine whether the given sequence of parentheses is properly matched.\n\nSequence: { } { } ( { } { } )\nValid/Invalid?",
        "targets": [
            "Invalid"
        ],
        "multiple_choice_targets": [
            "Valid",
            "Invalid"
        ],
        "multiple_choice_scores": [
            0,
            1
        ]
    },
    {
        "idx": 254,
        "inputs": "Determine whether the given sequence of parentheses is properly matched.\n\nSequence: [ { } ] { } { [ ] [ ] } [ ] ( { ( ) } )\nValid/Invalid?",
        "targets": [
            "Valid"
        ],
        "multiple_choice_targets": [
            "Valid",
            "Invalid"
        ],
        "multiple_choice_scores": [
            0,
            1
        ]
    },
    {
        "idx": 768,
        "inputs": "Determine whether the given sequence of parentheses is properly matched.\n\nSequence: ( [ ] ) ( [ ( ) ] )\nValid/Invalid?",
        "targets": [
            "Invalid"
        ],
        "multiple_choice_targets": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9"
        ],
        "multiple_choice_scores": [
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ]
    },
    {
        "idx": 628,
        "inputs": "Determine whether the given sequence of parentheses is properly matched.\n\nSequence: [ ) { [ { } ] } { [ ] ( ) } ( { } ( ( )\nValid/Invalid?",
        "targets": [
            "Valid"
        ],
        "multiple_choice_targets": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9"
        ],
        "multiple_choice_scores": [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0
        ]
    },
    {
        "idx": 212,
        "inputs": "Given two strings, determine the length of the longest common subsequence.\n\nStrings: DSBH GXJVQQQBTXOWGHXJUOKLBNIOS\nLength of longest common subsequence:",
        "targets": [
            "Invalid"
        ],
        "multiple_choice_targets": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9"
        ],
        "multiple_choice_scores": [
            0,
            1
        ]
    },
    {
        "idx": 707,
        "inputs": "Determine whether the given sequence of parentheses is properly matched.\n\nSequence: ) } ) [ { ] ( } [ ]\nValid/Invalid?",
        "targets": [
            "Valid"
        ],
        "multiple_choice_targets": [
            "Valid",
            "Invalid"
        ],
        "multiple_choice_scores": [
            1,
            0
        ]
    },
    {
        "idx": 751,
        "inputs": "Given two strings, determine the length of the longest common subsequence.\n\nStrings: XWSCOLDPOLGRBKYCRUMR RHWQVDTRGOWMAKRUFNYRLHTZXOVXLD\nLength of longest common subsequence:",
        "targets": [
            "Invalid"
        ],
        "multiple_choice_targets": [
            "Valid",
            "Invalid"
        ],
        "multiple_choice_scores": [
            1,
            0
        ]
    },
    {
        "idx": 426,
        "inputs": "Determine whether the given sequence of parentheses is properly matched.\n\nSequence: [ [ [ [ [ ] ] ] { { } } [ ] ] ] [ [ ] [\nValid/Invalid?",
        "targets": [
            "3"
        ],
        "multiple_choice_targets": [
            "Valid",
            "Invalid"
        ],
        "multiple_choice_scores": [
            0,
            1
        ]
    },
    {
        "idx": 587,
        "inputs": "Determine whether the given sequence of parentheses is properly matched.\n\nSequence: { { } } [ { ( [ ] ( ) { } [ ] ) [ ] } ]\nValid/Invalid?",
        "targets": [
            "Invalid"
        ],
        "multiple_choice_targets": [
            "Valid",
            "Invalid"
        ],
        "multiple_choice_scores": [
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0
        ]
    },
    {
        "idx": 675,
        "inputs": "Given two strings, determine the length of the longest common subsequence.\n\nStrings: VCEVWTBRXBIHJLNSCZSIJEGGRWOYBWQ XIUSIUAKKJLN\nLength of longest common subsequence:",
        "targets": [
            "Invalid"
        ],
        "multiple_choice_targets": [
            "Valid",
            "Invalid"
        ],
        "multiple_choice_scores": [
            1,
            0
        ]
    },
    {
        "idx": 237,
        "inputs": "Determine whether the given sequence of parentheses is properly matched.\n\nSequence: } [ [ ] ( ) [ ) [ ]\nValid/Invalid?",
        "targets": [
            "Valid"
        ],
        "multiple_choice_targets": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9"
        ],
        "multiple_choice_scores": [
            1,
            0
        ]
    },
    {
        "idx": 590,
        "inputs": "Given two strings, determine the length of the longest common subsequence.\n\nStrings: YZSQUGHJZLHOLQQWRWNLJQDNVTSUD AAYELGTFEBULMVNZYOFYTMLLHCZVZ\nLength of longest common subsequence:",
        "targets": [
            "Invalid"
        ],
        "multiple_choice_targets": [
            "Valid",
            "Invalid"
        ],
        "multiple_choice_scores": [
            0,
            1
        ]
    },
    {
        "idx": 649,
        "inputs": "Given two strings, determine the length of the longest common subsequence.\n\nStrings: URVQRJYOQGMKWKQUWVQYRAA EGKFWKGJYTXRUACYBPGDDGDKSANR\nLength of longest common subsequence:",
        "targets": [
            "Valid"
        ],
        "multiple_choice_targets": [
            "Valid",
            "Invalid"
        ],
        "multiple_choice_scores": [
            1,
            0
        ]
    },
    {
        "idx": 333,
        "inputs": "Determine whether the given sequence of parentheses is properly matched.\n\nSequence: { [ ] [ ] } [ ] ( ( { ( [ ( ) ] ) } ) )\nValid/Invalid?",
        "targets": [
            "Invalid"
        ],
        "multiple_choice_targets": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9"
        ],
        "multiple_choice_scores": [
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0
        ]
    },
    {
        "idx": 234,
        "inputs": "Determine whether the given sequence of parentheses is properly matched.\n\nSequence: ) } } [ } ) ) ) ) ) ) } } ( } ) ) } } )\nValid/Invalid?",
        "targets": [
            "Invalid"
        ],
        "multiple_choice_targets": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9"
        ],
        "multiple_choice_scores": [
            0,
            1
        ]
    },
    {
        "idx": 190,
        "inputs": "Determine whether the given sequence of parentheses is properly matched.\n\nSequence: [ ] { ( ( ( [ [ { } ( ) ( ) ] ] ) ) ) }\nValid/Invalid?",
        "targets": [
            "6"
        ],
        "multiple_choice_targets": [
            "Valid",
            "Invalid"
        ],
        "multiple_choice_scores": [
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ]
    }
]